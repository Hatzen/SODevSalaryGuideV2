--- # config server

spring:
  profiles:
    # https://cloud.spring.io/spring-cloud-config/multi/multi__spring_cloud_config_server.html#_file_system_backend
    # Needed to run without git: https://stackoverflow.com/a/33179106/8524651
    active: native
  cloud:
    kubernetes:
      discovery:
        discovery-server-url: http://spring-cloud-kubernetes-discoveryserver:8761


--- # database

spring:
  jpa:
    hibernate:
      #https://stackoverflow.com/a/39094773/8524651
      ddl-auto: validate
      # https://stackoverflow.com/a/29088398/8524651
      naming-strategy: org.hibernate.cfg.EJB3NamingStrategy
      # TODO: Check if this is deprecated? https://stackoverflow.com/a/74861220/8524651
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      globally_quoted_identifiers: true
    properties:
      hibernate:
        show_sql: true
  liquibase:
    change-log: db.changelog-master.yml

  # https://stackoverflow.com/a/75480766/8524651
  # init custom spring batch tables. Seems to initialize our tablesas well.
  # TODO: really needed? Or only for test?
  datasource:
    initialization-mode: always

--- # Caching and http

spring:
  # basic authentification to protect actuator access.
  security:
    user:
      name: admin
      password: adminpassword

  cache:
    type: jcache
    jcache:
      provider: com.hazelcast.cache.impl.HazelcastServerCachingProvider
bucket4j:
  cache-to-use: jcache
  enabled: true
  filters:
    # Configure properly
    # https://github.com/MarcGiffing/bucket4j-spring-boot-starter?tab=readme-ov-file#monitoring---spring-boot-actuator
    #- cache-name: buckets2
    #  filter-method: servlet
    #  filter-order: 1
    #  url: .*
    #  metrics:
    #    tags:
    #      - key: IP
    #        expression: getRemoteAddr()
    #        types: REJECTED_COUNTER # for data privacy reasons the IP should only be collected on bucket rejections
    #      - key: USERNAME
    #        expression: "@securityService.username() != null ? @securityService.username() : 'anonym'"
    #      - key: URL
    #        expression: getRequestURI()
    #  rate-limits:
    #    - execute-condition: "@securityService.username() == 'admin'"
    #      cache-key: "@securityService.username()?: getRemoteAddr()"
    #      bandwidths:
    #        - capacity: 30
    #          time: 1
    #          unit: minutes
    - cache-name: buckets
      filter-method: servlet
      url: .*
      rate-limits:
        - execute-condition: "@securityService.notSignedIn()" # only for not logged in users
          cache-key: "getRemoteAddr()"
          bandwidths:
            - capacity: 10
              time: 1
              unit: minutes
        - execute-condition: "@securityService.username() != 'admin'" # strategy is only evaluate first. so the user must be logged in and user is not admin
          cache-key: "@securityService.username()"
          bandwidths:
            - capacity: 1000
              time: 1
              unit: minutes
        - execute-condition: "@securityService.username() == 'admin'"  # user is admin
          cache-key: "@securityService.username()"
          bandwidths:
            - capacity: 1000000000
              time: 1
              unit: minutes


--- # additional logging

spring:
  # 2024-06-18T16:22:31.904+02:00  INFO 15596 --- [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
  devtools:
    add-properties: false

# 2024-06-18T16:22:31.905+02:00  INFO 15596 --- [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
logging:
  level:
    web: DEBUG